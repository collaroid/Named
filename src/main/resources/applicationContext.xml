<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.0.xsd"
    >

	<context:annotation-config />

	<context:component-scan base-package="com.collar.named" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="taskExecutor_http" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量  -->
		<property name="corePoolSize" value="80" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="100" />
		<!-- 线程池所使用的缓冲队列长度 -->
		<property name="queueCapacity" value="8500" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="600" />
		<!-- true表示线程池使用shutdown()来关闭；false表示线程池使用shutdownNow()来关闭；-->
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy" />
		</property>
	</bean>

	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:init.properties</value>
		</property>
	</bean>


	<bean id="dataSourceDefault" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="url">
			<value>${datasource.url}</value>
		</property>
		<property name="username">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
		<property name="maxActive">
			<value>${datasource.maxActive}</value>
		</property>
		<property name="maxIdle">
			<value>${datasource.maxIdle}</value>
		</property>
		<property name="maxWait">
			<value>${datasource.maxWait}</value>
		</property>
		<property name="defaultAutoCommit">
			<value>${datasource.defaultAutoCommit}</value>
		</property>
		<property name="testWhileIdle">
			<value>${datasource.testWhileIdle}</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>${datasource.timeBetweenEvictionRunsMillis}</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>${datasource.minEvictableIdleTimeMillis}</value>
		</property>
		<property name="testOnBorrow">
			<value>${datasource.testOnBorrow}</value>
		</property>
	</bean>

    <!-- scheduler start -->
    <!-- proxy-target-class="true" not work due to BeanNameAutoProxyCreator -->
    <task:annotation-driven scheduler="scheduler" executor="executor" />
    <task:scheduler id="scheduler" pool-size="5" />
    <task:executor id="executor" pool-size="5" rejection-policy="CALLER_RUNS" />
    <!-- scheduler end -->

	<bean id="baseJdbcDao" class="com.collar.named.dao.BaseJdbcDao">
		<property name="dataSource" ref="dataSourceDefault"/>
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSourceDefault" />
		</property>
	</bean>
	<bean id="txInterceptor"
		  class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="txManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	<bean id="txBeanNameProxyCreator"
		  class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>txInterceptor</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>*Service</value>
				<value>*ServiceImpl</value>
				<value>*Dao</value>
				<value>*DaoImpl</value>
			</list>
		</property>
	</bean>

</beans>